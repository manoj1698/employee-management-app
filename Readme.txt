# Spring Boot Project Readme

## How to Run the Project

1. **Clone the Repository:**
   ```bash
   git clone <repository-url>

2.Navigate to the Project Directory:
    cd your-spring-boot-project

    **Build the Project
    **Run the application : The application will start at http://localhost:8080.

3.Database Setup
-----------------
Database Configuration:

The application uses a Mongo DB.
Ensure the database server is running and accessible.
Database Connection Properties:

Open src/main/resources/application.yml.
Update the database connection properties if needed.


4.API Documentation
--------------------
  1. Add Employee
    Endpoint: POST /employees
    Description: Add an employee to the database.
    Request:
        {
          "employeeName": "Manoj Mahanta",
          "phoneNumber": "0123456789",
          "email": "manoj@gmail.com",
          "reportsTo": "manager-id",
          "profileImage": "https://example.com/profile-image.jpg"
        }

    Response:
        {
           "generated-uuid"
        }
        *This employee id is generated by the mongo DB randomly *

        #### When employee is created then a mail is automatically sent o the Manager.

   2. Get All Employees
   Endpoint: GET /employees
   Description: Retrieve all employees from the database. (Pagination ia also implemented , if u dont give it's take default value)
   Response:
        [
          {
            "id": "employee-id-1",
            "employeeName": "John Doe",
            "phoneNumber": "123-456-7890",
            "email": "john.doe@example.com",
            "reportsTo": "manager-id",
            "profileImage": "https://example.com/profile-image.jpg"
          },
          // ... other employees
        ]

3. Delete Employee by ID
    Endpoint: DELETE /employees/{id}
    Description: Delete an employee from the database by ID.

4. Update Employee by ID
    Endpoint: PUT /employees/{id}
    Description: Update employee details in the database by ID.
    Request:
        {
          "employeeName": "Updated Name",
          "phoneNumber": "987-654-3210",
          "email": "updated.email@example.com",
          "reportsTo": "new-manager-id",
          "profileImage": "https://example.com/updated-profile-image.jpg"
        }

5. Get nth Level Manager of an Employee
    Endpoint: GET /employees/manager/{employeeId}
    Description: Get the nth level manager of an employee.
    Request Parameters:
    level: The desired level of the manager.


